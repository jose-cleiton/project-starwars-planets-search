{"version":3,"sources":["contexts/context.jsx","components/NameFilterr.jsx","components/Filtros.jsx","components/Classificar.jsx","components/ListaFiltros.jsx","components/Table.jsx","App.js","index.js"],"names":["StarWearsContexto","createContext","StarWearsProvider","children","useState","data","setData","planetasFiltrados","setPlanetasFiltrados","condicoes","setCondicoes","column","comparison","value","selected","setSelected","filterByName","name","filterByNumericValues","order","sort","filters","setFilters","columns","setColumns","fetchPlanetas","a","fetch","response","json","results","planetas","filter","planet","residents","useEffect","store","Provider","NameFilterr","useContext","className","type","data-testid","onChange","target","prevState","Filtros","filtrosSelecionados","setFiltrosSelecionados","planeta","toUpperCase","includes","dataFiltrar","forEach","filtro","Number","applyFilter","filtrosSelecionadosNovo","map","opcao","htmlFor","e","item","index","key","defaultValue","onClick","Classificar","id","ListaFiltros","filtroRemovido","deletaFiltro","Table","length","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.544dc024.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const StarWearsContexto = createContext(null);\r\n\r\nexport const StarWearsProvider = ({ children }) => {\r\n  const URL = 'https://swapi-trybe.herokuapp.com/api/planets/?format=json';\r\n  const [data, setData] = useState([]);\r\n  const [planetasFiltrados, setPlanetasFiltrados] = useState([]);\r\n  const [condicoes, setCondicoes] = useState([]);\r\n  const [selected, setSelected] = useState({\r\n    column: '',\r\n    comparison: '',\r\n    value: 0,\r\n  });\r\n  const [filters, setFilters] = useState({\r\n    filterByName: {\r\n      name: '',\r\n    },\r\n    filterByNumericValues: [],\r\n    order: {\r\n      column: 'population',\r\n      sort: 'ASC',\r\n    },\r\n\r\n  });\r\n  const [columns, setColumns] = useState([\r\n    'population',\r\n    'orbital_period',\r\n    'diameter',\r\n    'rotation_period',\r\n    'surface_water',\r\n  ]);\r\n\r\n  const fetchPlanetas = async () => {\r\n    const response = await fetch(URL);\r\n    const { results } = await response.json();\r\n    const planetas = results.filter((planet) => delete planet.residents);\r\n    setPlanetasFiltrados(planetas);\r\n    setData(planetas);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlanetas();\r\n  }, []);\r\n  const store = {\r\n    data,\r\n    planetasFiltrados,\r\n    condicoes,\r\n    selected,\r\n    filters,\r\n    columns,\r\n    setColumns,\r\n    setPlanetasFiltrados,\r\n    setCondicoes,\r\n    setSelected,\r\n    setFilters,\r\n  };\r\n  return (\r\n    <StarWearsContexto.Provider value={ store }>\r\n      {children}\r\n    </StarWearsContexto.Provider>\r\n  );\r\n};\r\nStarWearsProvider.propTypes = {\r\n  children: propTypes.arrayOf(propTypes.shape({})),\r\n}.isRequired;\r\n","import React, { useContext } from 'react';\r\nimport { StarWearsContexto } from '../contexts/context';\r\n\r\nconst NameFilterr = () => {\r\n  const {\r\n    setFilters,\r\n  } = useContext(StarWearsContexto);\r\n  return (\r\n    <div className=\"d-flex justify-content-center  \">\r\n      <section>\r\n        <div>\r\n          <h3>Projeto Star Wars</h3>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"form-control text-white-50 bg-dark\"\r\n            type=\"text\"\r\n            data-testid=\"name-filter\"\r\n            onChange={ ({ target: { value } }) => setFilters(\r\n              (prevState) => ({\r\n                ...prevState,\r\n                filterByName: { name: value },\r\n              }),\r\n            ) }\r\n          />\r\n        </div>\r\n      </section>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default NameFilterr;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { StarWearsContexto } from '../contexts/context';\r\n\r\nconst Filtros = () => {\r\n  const {\r\n    data, selected,\r\n    filters, setPlanetasFiltrados,\r\n    setSelected, setFilters,\r\n    columns, setColumns,\r\n  } = useContext(StarWearsContexto);\r\n\r\n  const [filtrosSelecionados, setFiltrosSelecionados] = useState([]);\r\n\r\n  const COMPARISONS = ['maior que', 'menor que', 'igual a'];\r\n\r\n  useEffect(() => setPlanetasFiltrados(data\r\n    .filter((planeta) => planeta.name.toUpperCase()\r\n      .includes(filters.filterByName.name.toUpperCase()))),\r\n  [data, filters, setPlanetasFiltrados]);\r\n\r\n  const botao = () => {\r\n    setFilters(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        filterByNumericValues: [...prevState.filterByNumericValues, selected],\r\n      }),\r\n    );\r\n    setColumns(columns\r\n      .filter((column) => column !== selected.column));\r\n  };\r\n\r\n  const applyFilter = () => {\r\n    let dataFiltrar = data;\r\n    filters.filterByNumericValues.forEach((filtro) => {\r\n      switch (filtro.comparison) {\r\n      case 'maior que':\r\n        dataFiltrar = dataFiltrar.filter((planeta) => (\r\n          Number(planeta[filtro.column]) > Number(filtro.value)\r\n        ));\r\n        break;\r\n      case 'menor que':\r\n        dataFiltrar = dataFiltrar.filter((planeta) => (\r\n          Number(planeta[filtro.column]) < Number(filtro.value)\r\n        ));\r\n        break;\r\n      case 'igual a':\r\n        dataFiltrar = dataFiltrar.filter((planeta) => (\r\n          Number(planeta[filtro.column]) === Number(filtro.value)\r\n        ));\r\n        break;\r\n      default:\r\n        break;\r\n      }\r\n      setPlanetasFiltrados(dataFiltrar);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    applyFilter();\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filters.filterByNumericValues]);\r\n\r\n  useEffect(() => {\r\n    const filtrosSelecionadosNovo = filters.filterByNumericValues\r\n      .map((filtro) => filtro.column);\r\n\r\n    setSelected({\r\n      column: columns.filter((opcao) => !filtrosSelecionados.includes(opcao))[0],\r\n      comparison: 'maior que',\r\n      value: '0',\r\n    });\r\n\r\n    setFiltrosSelecionados(filtrosSelecionadosNovo);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filters.filterByNumericValues]);\r\n  return (\r\n    <div\r\n      className=\"filtros d-flex flex-row justify-content-center align-items-end \"\r\n    >\r\n\r\n      <label htmlFor=\"column-filter\">\r\n        Coluna\r\n        <select\r\n          className=\"form-select text-white-50 bg-dark\"\r\n          data-testid=\"column-filter\"\r\n          onChange={ (e) => setSelected({ ...selected, column: e.target.value }) }\r\n        >\r\n          {columns\r\n            .filter((opcao) => !filtrosSelecionados\r\n              .includes(opcao))\r\n            .map((item, index) => (\r\n              <option key={ index } value={ item }>{item}</option>\r\n            ))}\r\n\r\n        </select>\r\n      </label>\r\n\r\n      <label htmlFor=\"comparison-filter\">\r\n        Operador\r\n        <select\r\n          className=\"form-select ms-1 text-white-50 bg-dark\"\r\n          data-testid=\"comparison-filter\"\r\n          name=\"comparison\"\r\n          onChange={ (e) => setSelected({ ...selected, comparison: e.target.value }) }\r\n        >\r\n          {COMPARISONS.map((item, index) => (\r\n            <option key={ index }>{item}</option>\r\n          ))}\r\n\r\n        </select>\r\n      </label>\r\n\r\n      <label\r\n        htmlFor=\"value-filter \"\r\n        className=\"ms-1\"\r\n      >\r\n        <input\r\n          className=\"form-control ms-1 text-white-50 bg-dark\"\r\n          data-testid=\"value-filter\"\r\n          type=\"number\"\r\n          defaultValue=\"0\"\r\n          onChange={ (e) => setSelected({ ...selected, value: e.target.value }) }\r\n        />\r\n      </label>\r\n\r\n      <div className=\"ms-2\">\r\n        <button\r\n          className=\"btn btn-warning\"\r\n          type=\"button\"\r\n          data-testid=\"button-filter\"\r\n          onClick={ () => {\r\n            botao();\r\n            setSelected({\r\n              column: 'population',\r\n              comparison: 'maior que',\r\n              value: '0',\r\n            });\r\n          } }\r\n        >\r\n          Filtrar\r\n        </button>\r\n        <button\r\n          className=\"btn btn-danger  ms-2\"\r\n          data-testid=\"button-remove-filters\"\r\n          type=\"submit\"\r\n          onClick={ () => {\r\n            setFilters(\r\n              (prevState) => ({\r\n                ...prevState,\r\n                filterByNumericValues: [],\r\n              }),\r\n            );\r\n            setColumns(['population',\r\n              'orbital_period',\r\n              'diameter',\r\n              'rotation_period',\r\n              'surface_water']);\r\n          } }\r\n        >\r\n          REMOVER FILTROS\r\n        </button>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filtros;\r\n","import React, { useContext } from 'react';\r\nimport { StarWearsContexto } from '../contexts/context';\r\n\r\nconst Classificar = () => {\r\n  const {\r\n\r\n    columns,\r\n  } = useContext(StarWearsContexto);\r\n  return (\r\n    <div\r\n      className=\"filtros d-flex flex-row justify-content-center align-items-end \"\r\n    >\r\n      <div>\r\n        <label htmlFor=\"column-filter\">\r\n          Coluna\r\n          <select\r\n            className=\"form-select text-white-50 bg-dark\"\r\n          >\r\n            {columns.map((item, index) => (\r\n              <option key={ index } value={ item }>{item}</option>\r\n            ))}\r\n\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check \">\r\n        <label\r\n          className=\"form-check-label ms-1 \"\r\n          htmlFor=\"flexRadioDefault1\"\r\n        >\r\n          Ascendente\r\n          <input\r\n            className=\"form-check-input \"\r\n            type=\"radio\"\r\n            name=\"flexRadioDefault\"\r\n            id=\"flexRadioDefault1\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <label\r\n          className=\"form-check-label ms-1\"\r\n          htmlFor=\"flexRadioDefault2\"\r\n        >\r\n          Descendente\r\n          <input\r\n            className=\"form-check-input \"\r\n            type=\"radio\"\r\n            name=\"flexRadioDefault\"\r\n            id=\"flexRadioDefault2\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <button\r\n        className=\"btn btn-warning ms-2\"\r\n        type=\"button\"\r\n        data-testid=\"column-sort-button\"\r\n      >\r\n        Ordenar\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Classificar;\r\n","import React, { useContext } from 'react';\r\nimport { StarWearsContexto } from '../contexts/context';\r\n\r\nfunction ListaFiltros() {\r\n  const {\r\n    filters,\r\n    setFilters,\r\n    columns,\r\n    setColumns,\r\n  } = useContext(StarWearsContexto);\r\n\r\n  const deletaFiltro = (index) => {\r\n    setFilters(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        filterByNumericValues: filters\r\n          .filterByNumericValues.filter((filtro, id) => id !== index),\r\n      }),\r\n    );\r\n    const filtroRemovido = filters\r\n      .filterByNumericValues.filter((filtro, id) => id === index);\r\n    setColumns([...columns, filtroRemovido[0].column]);\r\n  };\r\n  return (\r\n    <div>\r\n      {filters.filterByNumericValues.map((filter, index) => (\r\n        <label\r\n          htmlFor=\"filter\"\r\n          key={ index }\r\n          data-testid=\"filter\"\r\n          className=\"d-flex align-items-center alert  \"\r\n        >\r\n          {`${filter.column} ${filter.comparison} ${filter.value}`}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-danger btn-close\"\r\n            onClick={ () => deletaFiltro(index) }\r\n          >\r\n            {' '}\r\n          </button>\r\n        </label>\r\n\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListaFiltros;\r\n","import React, { useContext } from 'react';\r\nimport { StarWearsContexto } from '../contexts/context';\r\n\r\nconst Table = () => {\r\n  const {\r\n    data,\r\n    planetasFiltrados,\r\n  } = useContext(StarWearsContexto);\r\n\r\n  return (\r\n    <div>\r\n      {data.length === 0\r\n        ? (\r\n          <div>Carregando...</div>\r\n        )\r\n        : (\r\n          <table className=\"table table-success table-striped table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Rotação</th>\r\n                <th>Orbita</th>\r\n                <th>Diâmetro</th>\r\n                <th>Clima</th>\r\n                <th>Gravidade</th>\r\n                <th>Terreno</th>\r\n                <th>Água da superfície</th>\r\n                <th>População</th>\r\n                <th>Filmes</th>\r\n                <th>Data de criação</th>\r\n                <th>Editado</th>\r\n                <th>URL</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {planetasFiltrados.map((planet, index) => (\r\n                <tr key={ index }>\r\n                  <td>{planet.name}</td>\r\n                  <td>{planet.rotation_period}</td>\r\n                  <td>{planet.orbital_period}</td>\r\n                  <td>{planet.diameter}</td>\r\n                  <td>{planet.climate}</td>\r\n                  <td>{planet.gravity}</td>\r\n                  <td>{planet.terrain}</td>\r\n                  <td>{planet.surface_water}</td>\r\n                  <td>{planet.population}</td>\r\n                  <td>{planet.films}</td>\r\n                  <td>{planet.created}</td>\r\n                  <td>{planet.edited}</td>\r\n                  <td>{planet.url}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\nexport default Table;\r\n","import React from 'react';\nimport NameFilterr from './components/NameFilterr';\nimport Filtros from './components/Filtros';\nimport Classificar from './components/Classificar';\nimport ListaFiltros from './components/ListaFiltros';\nimport Table from './components/Table';\nimport { StarWearsProvider } from './contexts/context';\n\nconst App = () => (\n  <StarWearsProvider>\n    <div className=\"p-3 mb-2 bg-dark text-white \">\n\n      <NameFilterr />\n\n      <div className=\"d-flex justify-content-evenly  mb-3\">\n        <Filtros />\n        <Classificar />\n      </div>\n      <ListaFiltros />\n      <Table />\n    </div>\n\n  </StarWearsProvider>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}